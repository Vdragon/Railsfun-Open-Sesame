{% extends "Page design/Inner page.template.markdown" %}

{% block page_content %}
# Ruby-01

<!-- toc -->

## 0. 準備環境
### 安裝 [Ruby Version Manager (RVM)](https://rvm.io/) （本教學僅支援此安裝方式安裝的 Ruby）
雖然說安裝 Ruby 有很多種方式，不過使用 Ruby Version Manager (RVM) 來安裝 Ruby（以及之後會用到的 Rails）有下列好處：

* 可以選擇想要安裝的版本
* （待補）

安裝方式請參考官方網站教學，安裝完後您需要登出再登入 RVM 安裝上去的環境變數才會生效，我們才可以直接於終端機中直接執行 `rvm` 命令。

### 透過 RVM 安裝 Ruby
#### 1. 確認 RVM 可用的 Ruby 版本
執行 `$ rvm list known` 命令可以列出所有 RVM 支援的 Ruby 版本，您會發現 Ruby 有非常多不同的實作，其中 Matz's Ruby Interpreter(MRI Ruby) 為 Ruby 程式語言創作者松本行弘(Yukihiro “Matz” Matsumoto)所開發，於本教學中我們將會使用此 Ruby 實作。

```bash
$ rvm list known
# MRI Rubies
[ruby-]1.8.6[-p420]
[ruby-]1.8.7[-head] # security released on head
[ruby-]1.9.1[-p431]
[ruby-]1.9.2[-p330]
[ruby-]1.9.3[-p551]
[ruby-]2.0.0[-p643]
[ruby-]2.1.4
[ruby-]2.1[.5]
[ruby-]2.2[.1]
[ruby-]2.2-head
ruby-head

（下方省略）
```

**注意：**`rvm list known` 命令中列出的最新版本未必是上游的最新版本。MRI 版最新的版本請參考 <https://www.ruby-lang.org/zh_tw/downloads/> 的說明。

#### 2. 安裝 Ruby
執行 `$ rvm install 〈Ruby 版本〉` 來安裝指定的 Ruby 版本。

於一般狀況下，RVM 會下載該 Ruby 版本的來源程式碼(source code)，建構 Ruby 好之後將其安裝到家目錄底下的 `.rvm/bin` 目錄中，如果建構 Ruby 需要的軟體尚未安裝的話會跟您提示輸入您的密碼將這些軟體先安裝到系統中。


#### 3. 確認目前作用中的 Ruby 版本是你要的版本
執行 `$ ruby --version`

### 安裝 [Awesome Print](https://github.com/michaeldv/awesome_print)（建議）
Awesome Print 是一個可以將 Ruby 物件用美觀的方式印出的程式庫，安裝完後於程式中執行 `require "awesome_print"` 即可以用 `ap()` 來取代 `puts()` 或 `pp()` 印出任何 Ruby 物件。

`````ruby
> puts [1, 3, 2, [2, 3]]
1
3
2
2
3
 => nil 

> ap [1, 3, 2, [2, 3]]
[
    [0] 1,
    [1] 3,
    [2] 2,
    [3] [
        [0] 2,
        [1] 3
    ]
]
 => nil 
`````

執行下列命令即可安裝 Awesome Print：
`````
? gem install awesome_print
`````

## 1. {irb} 開宗明義
### 你***不應該***使用 Microsoft Windows 作業系統寫 Ruby
* 原因
    * 很多 Ruby 的程式庫都只相容 GNU/Linux 作業系統（而且有的還需要建構原生(native)語言(C...)的程式），於 Windows 上要使用這些程式庫是比較困難的。
    * 效能問題（內容待補）

### Ruby 內皆為物件，無基本型別，包含 Nil
不像 Java 有基本型別(Int/Float/...)，Ruby 所有的東西都是物件

### X.class，X.methods 的用法
`````
require “ap”
ap 123.methods #=> 可用的列表
ap 123.class #=> Fixnum #知道class後就可以查doc
ap true.class #=> TrueClass
ap nil.class #=> NilClass
#任何東西都可以這樣用
`````

## 參考資料<br />Reference Data
* [RVM: Ruby Version Manager - './install' - Installing RVM.](https://rvm.io/rubies/installing)
* [關於 Ruby](https://www.ruby-lang.org/zh_tw/about/)
* [Ruby MRI - Wikipedia, the free encyclopedia](https://en.wikipedia.org/wiki/Ruby_MRI)

{% endblock %}
